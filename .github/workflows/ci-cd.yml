name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                python-version: '3.10'
            
            - name: Docker BuildX
              uses: docker/setup-buildx-action@v1

            - name: Login to Amazon ECR
              env:
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              run: |
                aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
            
            - name: Build Docker image
              run: |
                docker build -t workout_app .
                docker tag workout_app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/531-image-repo:latest
            
            - name: Push Docker image to ECR
              run: docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/531-image-repo:latest
        
            - name: Run Unit Tests
              run: |
                docker run workout_app pytest tests/unit/

    deploy-to-testing-env:
      needs: build
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Setup AWS CLI
          uses: aws-actions/configure-aws-credentials@v2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

        - name: Update ECS
          run: |
            aws ecs update-service --cluster 531-testing-env-ecs-cluster --service 531-testing-env-ecs-service --force-new-deployment

        - name: Run Integration Tests in ECS
          run: |
            aws ecs run-task --cluster 531-testing-env-ecs-cluster \
              --task-definition 531-testing-env-task:2 \
              --launch-type FARGATE \
              --network-configuration "awsvpcConfiguration={subnets=[subnet-0733ed528741fbb1f,subnet-0d9eb2464b875dbce],securityGroups=[sg-0d86054e7df3c6a16],assignPublicIp=ENABLED}" \
              --overrides '{"containerOverrides":[{"name":"app","command":["pytest","tests/integration/"]}]}'
            
            